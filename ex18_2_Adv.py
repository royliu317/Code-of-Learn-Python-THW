#python函数传不可变对象（通过将对象传入函数并运行，并不能改变对象在函数外的赋值）
def ChangeInt(myint):
    myint = 10
    print(myint) 
 
int1 = 2 
ChangeInt(int1)

print(int1) #当函数运行完，再打印int1的值，看是否已被函数修改


#-------------------------------------------------------------------
print("-------------------------------------------------------------")
#python函数传可变对象（通过将对象传入函数并运行，可以改变对象在函数外的赋值）
def changeme(mylist):
   "修改传入的列表" #函数的文档字符串，一般用于解释说明该函数，通常在函数内的第1行
   mylist.append([1,2,3,4])
   print("函数内取值:", mylist) 
   return

list1 = [10,20,30]
changeme(list1)

print("函数外取值: ", list1) #当函数运行完，再打印list1的值，看是否已被函数修改


#-------------------------------------------------------------------
print("-------------------------------------------------------------")
#函数返回值：return
def sum( arg1, arg2 ):
   # 返回2个参数的和
   mytotal = arg1 + arg2
   print ("函数内:", mytotal)
   return mytotal
 
# 调用sum函数
total1 = sum( 10, 20 )
print ("函数外:", total1)


#-------------------------------------------------------------------
print("-------------------------------------------------------------")
#变量的4个作用域示例（由大至小）
x = int(2.9)  # 内建作用域
 
g_count = 0  # 全局作用域
def outer():
    o_count = 1  # 闭包函数外的函数中
    def inner():
        i_count = 2  # 局部作用域


#-------------------------------------------------------------------
print("-------------------------------------------------------------")
#全局变量与局部变量
total = 0 # total是全局变量

def sum(arg1, arg2):
    total = arg1 + arg2 # 函数内的total是局部变量，与上面的total没有任何关系，函数外也不可以调用该局部变量
    print ("函数内是局部变量 : ", total)
    return total

sum(10, 20)
print ("函数外是全局变量 : ", total)


